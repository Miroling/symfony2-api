imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sensio_framework_extra:
    router:  { annotations: true }
    request: { converters: true }
    view:    { annotations: true }
    cache:   { annotations: true }

fos_rest:
    disable_csrf_role:    null
    access_denied_listener:

        # Prototype
        name:                 ~
    unauthorized_challenge:  null
    param_fetcher_listener:  false
    cache_dir:            '%kernel.cache_dir%/fos_rest'
    allowed_methods_listener:  false
    routing_loader:
        default_format:       null
        include_format:       true
    body_converter:
        enabled:              false
        validate:             false
        validation_errors_argument:  validationErrors
    service:
        router:               router
        templating:           templating
        serializer:           jms_serializer.serializer
        view_handler:         fos_rest.view_handler.default
        exception_handler:    fos_rest.view.exception_wrapper_handler
        inflector:            fos_rest.inflector.doctrine
        validator:            validator
    serializer:
        version:              null
        groups:               []
        serialize_null:       false
    view:
        default_engine:       twig
        force_redirects:

            # Prototype
            name:                 ~
        mime_types:

            # Prototype
            name:                 ~
        formats:

            # Prototype
            name:                 ~
        templating_formats:

            # Prototype
            name:                 ~
        view_response_listener:  false
        failed_validation:    400
        empty_content:        204
        exception_wrapper_handler:  null
        serialize_null:       false
        jsonp_handler:
            callback_param:       callback
            callback_filter:      '/(^[a-z0-9_]+$)|(^YUI\.Env\.JSONP\._[0-9]+$)/i'
            mime_type:            application/javascript+jsonp
#    exception:
#        enabled:              false
#        exception_controller:  null
#        codes:
#
#            # Prototype
#            name:                 ~
#        messages:
#
#            # Prototype
#            name:                 ~
    body_listener:
        default_format:       null
        throw_exception_on_unsupported_content_type:  false
        decoders:

            # Prototype
            name:                 ~
        array_normalizer:
            service:              null
            forms:                false
#    format_listener:
#        rules:
#
#            # URL path info
#            path:                 null
#
#            # URL host name
#            host:                 null
#
#            # Method for URL
#            methods:              null
#            stop:                 false
#            prefer_extension:     true
#            fallback_format:      html
#            exception_fallback_format:  null
#            priorities:           []
#        media_type:
#            version_regex:        '/(v|version)=(?P<version>[0-9\.]+)/'

jms_serializer:
    handlers:
        datetime:
            default_format: "c" # ISO8601
            default_timezone: "UTC" # defaults to whatever timezone set in php.ini or via date_default_timezone_set

    property_naming:
        separator:  _
        lower_case: true

    metadata:
        cache: file
        debug: "%kernel.debug%"
        file_cache:
            dir: "%kernel.cache_dir%/serializer"

        # Using auto-detection, the mapping files for each bundle will be
        # expected in the Resources/config/serializer directory.
        #
        # Example:
        # class: My\FooBundle\Entity\User
        # expected path: @MyFooBundle/Resources/config/serializer/Entity.User.(yml|xml|php)
        auto_detection: true

        # if you don't want to use auto-detection, you can also define the
        # namespace prefix and the corresponding directory explicitly
#        directories:
#            any-name:
#                namespace_prefix: "My\\FooBundle"
#                path: "@MyFooBundle/Resources/config/serializer"
#            another-name:
#                namespace_prefix: "My\\BarBundle"
#                path: "@MyBarBundle/Resources/config/serializer"
#
#    visitors:
#        json:
#            options: 0 # json_encode options bitmask
#        xml:
#            doctype_whitelist:
#                - '<!DOCTYPE authorized SYSTEM "http://some_url">' # an authorized document type for xml deserialization

nelmio_api_doc:
    name:                 'API documentation'
    exclude_sections:     []
    default_sections_opened:  true
    motd:
        template:             'NelmioApiDocBundle::Components/motd.html.twig'
    request_listener:
        enabled:              true
        parameter:            _doc
    sandbox:
        enabled:              true
        endpoint:             null
        accept_type:          null
        body_format:
            formats:

                # Defaults:
#                - form
                - json
            default_format:      json # One of "form"; "json"
        request_format:
            formats:

                # Defaults:
                json:                application/json
#                xml:                 application/xml
            method:               accept_header # One of "format_param"; "accept_header"
            default_format:       json
        authentication:
            delivery:             header # Required
            name:                 App-Authorization # Required

            # Required if http delivery is selected.
            type:                 basic # One of "basic"; "bearer"
            custom_endpoint:      false

    swagger:
        api_base_path:        /api
        swagger_version:      '1.2'
        api_version:          '0.1'
        info:
            title:                Symfony2
            description:          'My awesome Symfony2 app!'
            TermsOfServiceUrl:    null
            contact:              null
            license:              null
            licenseUrl:           null
    cache:
        enabled:              false
        file:                 '%kernel.cache_dir%/api-doc.cache'