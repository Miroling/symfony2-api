imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enabled: true, enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller:
        enabled: "%kernel.debug%"
        profiler: false
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sensio_framework_extra:
    router:  { annotations: true }
    request: { converters: true }
    view:    { annotations: false }
    cache:   { annotations: true }

parameters:
    jms_serializer.camel_case_naming_strategy.class: JMS\Serializer\Naming\IdenticalPropertyNamingStrategy

fos_rest:
    param_fetcher_listener:  true
    cache_dir:            '%kernel.cache_dir%/fos_rest'
    allowed_methods_listener:  true
    routing_loader:
        default_format:       json
        include_format:       true
    body_converter:
        enabled:              true
        validate:             true
        validation_errors_argument:  validationErrors
    service:
        router:               router
        templating:           templating
        serializer:           jms_serializer.serializer
        view_handler:         fos_rest.view_handler.default
        exception_handler:    fos_rest.view.exception_wrapper_handler
        inflector:            fos_rest.inflector.doctrine
        validator:            validator
    serializer:
        version:              ~
        groups:               []
        serialize_null:       true
    view:
        formats:
            #rss: false
            json: true
            xml: true
            html: true
        templating_formats:
            html: true
#        force_redirects:
#            html: true
        mime_types:
            json: 'application/json'
            jsonp: 'application/javascript+jsonp'
            xml: 'application/xml'
        mime_types:
            json:   'application/json'
            jsonp:  'application/javascript+jsonp'
            xml: 'application/xml'
        default_engine:       twig
        view_response_listener:  force
        failed_validation:    HTTP_BAD_REQUEST
        empty_content:        204
        exception_wrapper_handler:  FOS\RestBundle\View\ExceptionWrapperHandler
        serialize_null:       true
#    exception:
#        enabled:              false
#        exception_controller:  null
#        codes:
#
#            # Prototype
#            name:                 ~
#        messages:
#
#            # Prototype
#            name:                 ~
    body_listener:
        default_format:       json
        throw_exception_on_unsupported_content_type:  true
        array_normalizer: fos_rest.normalizer.camel_keys

#            # Prototype
#            name:                 ~
#        array_normalizer:
#            service:              null
#            forms:                false
    format_listener:
        rules:
            - { path: ^/api, priorities: [ json, xml ], fallback_format: ~, prefer_extension: true }
            - { path: '^/', priorities: [ 'text/javascript', 'text/css', 'text/html', '*/*'], fallback_format: html, prefer_extension: true }
#        media_type:
#            version_regex:        '/(v|version)=(?P<version>[0-9\.]+)/'

jms_serializer:
    handlers:
        datetime:
            default_format: "c" # ISO8601
            default_timezone: "UTC" # defaults to whatever timezone set in php.ini or via date_default_timezone_set

    property_naming:
        separator:  _
        lower_case: true

    metadata:
        cache: file
        debug: "%kernel.debug%"
        file_cache:
            dir: "%kernel.cache_dir%/serializer"

        # Using auto-detection, the mapping files for each bundle will be
        # expected in the Resources/config/serializer directory.
        #
        # Example:
        # class: My\FooBundle\Entity\User
        # expected path: @MyFooBundle/Resources/config/serializer/Entity.User.(yml|xml|php)
        auto_detection: true

        # if you don't want to use auto-detection, you can also define the
        # namespace prefix and the corresponding directory explicitly
#        directories:
#            any-name:
#                namespace_prefix: "My\\FooBundle"
#                path: "@MyFooBundle/Resources/config/serializer"
#            another-name:
#                namespace_prefix: "My\\BarBundle"
#                path: "@MyBarBundle/Resources/config/serializer"
#
#    visitors:
#        json:
#            options: 0 # json_encode options bitmask
#        xml:
#            doctype_whitelist:
#                - '<!DOCTYPE authorized SYSTEM "http://some_url">' # an authorized document type for xml deserialization


nelmio_api_doc:
    name:                 'API documentation'
    sandbox:
        enabled:  true # default: true, you can set this parameter to `false` to disable the sandbox
#          endpoint: /app_dev.php # default: /app_dev.php, use this parameter to define which URL to call through the sandbox
        accept_type: application/json # default null, if set, the value is automatically populated as the Accept header
        body_format: json # default form, determines whether to send x-www-form-urlencoded data or json-encoded data in sandbox requests
        request_format:
            method: format_param # default format_param, alternately accept_header, decides how to request the response format
            default_format: json # default json, alternately xml, determines which content format to request back by default
        authentication:
            delivery:             header # Required
            name:                 App-Authorization # Required
